name: Build and publish wheels

on: [push, pull_request]

jobs:
  # Warning: The build_wheel job does succeed, but the wheels are not
  # working properly across different environments.

  # build_wheels:
  #   name: Build wheels on ${{ matrix.os }}
  #   runs-on: ${{ matrix.os }}
  #   # build on every tag starting with 'v'
  #   if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
  #   strategy:
  #     matrix:
  #       os: [ubuntu-20.04, macos-11]
  #
  #   steps:
  #     - uses: actions/checkout@v3
  #
  #     # Used to host cibuildwheel
  #     - uses: actions/setup-python@v3
  #
  #     - name: Install cibuildwheel
  #       run: python -m pip install cibuildwheel==2.11.3
  #
  #     - name: Build wheels
  #       run: python -m cibuildwheel --output-dir wheelhouse
  #       env:
  #         CIBW_ENVIRONMENT_MACOS: CXX=g++-12 CC=gcc-12
  #       # to supply options, put them in 'env', like:
  #       # env:
  #       #   CIBW_SOME_OPTION: value
  #
  #     - uses: actions/upload-artifact@v3
  #       with:
  #         path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          path: dist/*.tar.gz

  upload_pypi:
    environment: pypi
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write
    needs: [build_sdist]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    # if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v4
        with:
          # unpacks default artifact into dist/
          # if `name: artifact` is omitted, the action will create extra parent dir
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.9.0
        #with:
        #  password: ${{ secrets.PYPI_API_TOKEN }}
        # To test: repository_url: https://test.pypi.org/legacy/
